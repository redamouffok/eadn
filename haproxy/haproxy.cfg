global
    log stdout format raw local0
    
    # Paramètres SSL/TLS optimisés
    ssl-default-bind-ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384
    ssl-default-bind-ciphersuites TLS_AES_128_GCM_SHA256:TLS_AES_256_GCM_SHA384:TLS_CHACHA20_POLY1305_SHA256
    ssl-default-bind-options ssl-min-ver TLSv1.2 no-tls-tickets

defaults
    log     global
    mode    http
    option  httplog
    option  dontlognull
    option  forwardfor
    timeout connect 5s
    timeout client  30s
    timeout server  30s

# ========================================
# FRONTEND HTTP (Port 80)
# Redirige automatiquement vers HTTPS
# ========================================
frontend http-in
    bind *:80
    mode http
    timeout client 30s
    
    # ACL pour détecter les requêtes HTTP
    acl is_http ssl_fc,not
    
    # Redirection HTTP -> HTTPS (301 = permanent)
    redirect scheme https code 301 if is_http

# ========================================
# FRONTEND HTTPS (Port 443)
# Gère les connexions SSL/TLS
# ========================================
frontend https-in
    # Bind sur le port 443 avec les 3 certificats
    bind *:443 ssl crt /run/secrets/site_cert crt /run/secrets/git_cert crt /run/secrets/ci_cert
    mode http
    timeout client 30s
    
    # Headers de sécurité
    http-response set-header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload"
    http-response set-header X-Frame-Options "SAMEORIGIN"
    http-response set-header X-Content-Type-Options "nosniff"
    http-response set-header X-XSS-Protection "1; mode=block"
    
    # ACL pour router selon le Host (domaine)
    acl is_app hdr(host) -i site.eadn.dz
    acl is_gitea hdr(host) -i git.eadn.dz
    acl is_jenkins hdr(host) -i ci.eadn.dz
    
    # Router vers le bon backend
    use_backend app_backend if is_app
    use_backend gitea_backend if is_gitea
    use_backend jenkins_backend if is_jenkins
    
    # Backend par défaut si aucun domaine ne correspond
    default_backend app_backend

# ========================================
# BACKENDS
# ========================================
backend app_backend
    mode http
    timeout connect 5s
    timeout server 30s
    option httpchk GET /
    http-request set-header X-Forwarded-Proto https
    http-request set-header X-Forwarded-Port 443
    server app stack_app:80 check resolvers docker init-addr last,libc

backend gitea_backend
    mode http
    timeout connect 5s
    timeout server 30s
    option httpchk GET /
    http-request set-header X-Forwarded-Proto https
    http-request set-header X-Forwarded-Port 443
    server gitea stack_gitea:3000 check resolvers docker init-addr last,libc

backend jenkins_backend
    mode http
    timeout connect 5s
    timeout server 30s
    option httpchk GET /login
    http-request set-header X-Forwarded-Proto https
    http-request set-header X-Forwarded-Port 443
    server jenkins stack_jenkins:8080 check resolvers docker init-addr last,libc

# ========================================
# RESOLVERS
# ========================================
resolvers docker
    nameserver dns 127.0.0.11:53
    resolve_retries 3
    timeout resolve 1s
    timeout retry   1s
    hold valid      10s

